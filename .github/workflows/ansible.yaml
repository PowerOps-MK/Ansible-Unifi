---
# This is a basic workflow to deploy to local rpi's
name: "Ansible CI/CD"

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [master, main]
    paths:
      - "plugins/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Ensures only 1 workflow is running
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Test the collection
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Setup defaults for the steps within a job
    defaults:
      run:
        working-directory: ansible_collections/community/unifi

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ansible_collections/community/unifi

      # Test the sanity of collection
    #  - name: Test sanity 
    #    run: ansible-test sanity --docker -v --color --python 3.11

      # Install the custom collection
      - name: Install collection 
        run: ansible-galaxy collection install git+https://github.com/powerops-mk/ansible-unifi-network.git

      # Unzip files for Unifi
      - name: Unzip files
        run: tar -xzvf ./tests/unifi.tar.gz -C ~
   
      # Run Unifi Docker and allow to start
      - name: Run Unifi Docker
        run: |
          docker run -d --init -p 8080:8080 -p 8443:8443 -p 3478:3478/udp -v ~/unifi:/unifi --network host --name unifi jacobalberty/unifi
          sleep 20

      # Run test Python script
      - name: Run Python script
        run: python3 ./tests/test.py

      # Run the playbook against the hosts
      - name: Apply playbook 
        run: ansible-playbook ./tests/*.yaml

  # Deploy the collection 
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Build the collection 
      - name: Build the collection
        run: ansible-galaxy collection build

      # Rename build to latest
      - name: Rename the build artifact
        run: mv unifi-network-*.tar.gz unifi-network-latest.tar.gz

      # Upload the build package
    #  - uses: actions/upload-artifact@v3
      #  with:
     #     name: unifi-network-latest
     #     path: /home/runner/work/ansible-unifi-network/ansible-unifi-network/unifi-network-latest.tar.gz
